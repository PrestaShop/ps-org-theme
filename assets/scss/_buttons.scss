/* Button style */
.cta {
  --offset: .4rem;
  background-color: transparent;
  border: 0;
  display: inline-block;
  font-weight: 700;
  letter-spacing: .05rem;
  padding: 0;
  position: relative;
  text-decoration: none;
  text-transform: uppercase;

  &::before {
    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6.5 13' style='enable-background:new 0 0 6.5 13' xml:space='preserve'%3E%3Cstyle%3E.st0{fill:gray}%3C/style%3E%3Ccircle class='st0' cx='4.3' cy='5.4' r='1.1'/%3E%3Ccircle class='st0' cx='1.1' cy='11.9' r='1.1'/%3E%3C/svg%3E");
    background-position: 0 100%;
    background-repeat: repeat;
    background-size: .4rem auto;
    bottom: 0;
    content: "";
    height: 100%;
    left: 0;
    position: absolute;
    transition: all .3s cubic-bezier(.215, .61, .355, 1);
    width: 100%;
    z-index: 1;
  }

  &:hover,
  &:active,
  &:focus {
    outline: none;
  }

  &:hover span {
    transform: translate(var(--offset), calc(var(--offset) * -1));
  }

  & > span {
    align-items: center;
    background-color: #fff;
    color: #000;
    display: inline-flex;
    padding: 1.4rem 2rem;
    position: relative;
    transition: all .3s cubic-bezier(.215, .61, .355, 1);
    z-index: 2;
  }

  & > span svg {
    margin-left: 1.5rem !important;
    min-width: 1rem;
    width: 1rem;
  }
}

.cta--pattern {
  margin-right: var(--offset);
  margin-top: var(--offset);

  &:hover span {
    transform: translate(calc(var(--offset) * 2), calc(var(--offset) * -2));
  }

  & span {
    transform: translate(var(--offset), calc(var(--offset) * -1));
  }
}

@media (min-width: 768px) {
  .cta {
    --offset: .8rem;
  }
}

.cta-sm {
  padding: 12px 14px;
  font-size: 15px;
}

.cta-dark {
  & > span {
    background-color: #000;
    color: #fff;
  }
}
